import os
import unittest
from bs4 import BeautifulSoup


def main():
    with open("../materials/evilcorp.html") as f:
        html = f.read()

    soup = BeautifulSoup(html, "html.parser")

    soup.title.string = "Evil Corp - Stealing your money every day"

    script_tag = soup.new_tag("script")
    script_tag.string = '''hacked = function() {
        alert('hacked');
    }
    window.addEventListener('load', function() {
        var f = document.querySelector("form");
        f.setAttribute("onsubmit", "hacked()");
    }, false);'''
    soup.body.insert(0, script_tag)

    name = soup.find("span", {"class": "name"}).text.strip()
    h1_tag = soup.new_tag("h1")
    h1_tag.string = f"{name}, you are hacked!"
    soup.body.insert(1, h1_tag)

    link = soup.find("a", href="https://mrrobot.fandom.com/wiki/E_Corp")
    link["href"] = "https://mrrobot.fandom.com/wiki/Fsociety"
    link.string = "Fsociety"

    with open("evilcorp_hacked.html", "w") as f:
        f.write(str(soup))


class TestExploit(unittest.TestCase):

    def test_main(self):
        main()

        self.assertTrue(os.path.exists("evilcorp_hacked.html"))

        with open("evilcorp_hacked.html") as f:
            soup = BeautifulSoup(f, "html.parser")
            self.assertEqual(soup.title.string, "Evil Corp - Stealing your money every day")

        with open("evilcorp_hacked.html") as f:
            soup = BeautifulSoup(f, "html.parser")
            h1_tag = soup.find("h1")
            self.assertEqual(h1_tag.string, "Mr. Alderson, you are hacked!")

        with open("evilcorp_hacked.html") as f:
            soup = BeautifulSoup(f, "html.parser")
            script_tag = soup.find("script")
            self.assertTrue(script_tag is not None)
            self.assertTrue("hacked" in script_tag.string)

        with open("evilcorp_hacked.html") as f:
            soup = BeautifulSoup(f, "html.parser")
            link = soup.find("a", href="https://mrrobot.fandom.com/wiki/Fsociety")
            self.assertTrue(link is not None)
            self.assertEqual(link.string, "Fsociety")


if __name__ == '__main__':
    unittest.main()
